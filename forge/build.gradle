plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(':').loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
        mixinConfig "arrp.mixins.json", "brrp.mixins.json", "brrp-forge.mixins.json"
    }
}

archivesBaseName += '-forge'

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    common(project(path: ":", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    // 确保这里的是模组版本（不含游戏版本）而不是项目版本
    inputs.property "version", rootProject.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": rootProject.mod_version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = rootProject.sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

modrinth {
    projectId = 'JnrDtPAE'
    versionNumber = "${rootProject.mod_version}-mc${rootProject.minecraft_version}-forge"
    uploadFile = remapJar
    gameVersions = (project.supported_minecraft_versions as String).split(',') as List<String>
    loaders = ['forge']
    dependencies = [
    ]
}