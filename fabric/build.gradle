import com.modrinth.minotaur.dependencies.ModDependency

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    common(project(path: ":", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"
    exclude "net/devtech/arrp/api/RRPEvent.*"
    exclude 'net/devtech/arrp/api/RRPEvent$*.*'
    exclude "net/devtech/arrp/api/RRPInitEvent.*"
    exclude "net/devtech/arrp/api/RRPCallbackForge.*"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = rootProject.sourcesJar
    commonSources.exclude "net/devtech/arrp/api/RRPEvent.java"
    commonSources.exclude "net/devtech/arrp/api/RRPInitEvent.java"
    commonSources.exclude "net/devtech/arrp/api/RRPCallbackForge.java"
    dependsOn commonSources

    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

modrinth {
    projectId = 'JnrDtPAE'
    versionNumber = "${rootProject.mod_version}-mc${rootProject.minecraft_version}-fabric"
    uploadFile = remapJar
    gameVersions = (project.supported_minecraft_versions as String).split(',') as List<String>
    loaders = ['fabric']
    dependencies = [
            new ModDependency('P7dR8mSH', 'required') // Fabric API
    ]
}