plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":").loom.accessWidenerPath
}
base {
    archivesName = archivesName.get() + '-fabric'
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":", configuration: "namedElements")) { transitive false }
    shadowBundle(project(path: ":", configuration: "transformProductionFabric"))

    modImplementation "com.terraformersmc:modmenu:${rootProject.mod_menu_version}"
}

processResources {
    // 确保这里的是模组版本（不含游戏版本）而不是项目版本
    inputs.property "version", rootProject.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.mod_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}